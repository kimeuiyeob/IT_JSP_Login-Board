/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-22 17:19:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.app.introduce;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class introduce_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/introduce/introduce.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../fix/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <!-- 제목 -->\r\n");
      out.write("    <div id=\"title\" style=\"margin-top:0px; padding-top:200px;\">\r\n");
      out.write("        <b>소개</b>\r\n");
      out.write("        <div style=\"font-size: 23px; font-weight: 600; margin-top: 60px;margin-bottom: 30px;\">情을 옮기는 이정표, 마일스톤을 소개합니다.</div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div id=\"content\">\r\n");
      out.write("        <div id=\"contentBox\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 1번 -->\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li class=\"image\">\r\n");
      out.write("                <p class=\"number\">1</p>\r\n");
      out.write("                <a href=\"#\" class=\"image1\"></a>\r\n");
      out.write("                <strong>나눔 참여<br>\r\n");
      out.write("                    인프라 확대</strong>\r\n");
      out.write("                    <a href=\"#\" class=\"string\"></a>\r\n");
      out.write("                </li>\r\n");
      out.write("            <li class=\"text\">\r\n");
      out.write("                <b class=\"task\">전략과제</b>\r\n");
      out.write("                <p class=\"bold\">· 지역사회나눔생태계 육성<br></p>\r\n");
      out.write("                <p>· 협력적 기부문화 조성</p>\r\n");
      out.write("                <p class=\"bold\">· 소액다수기부활성화<br>\r\n");
      out.write("                <p>· 나눔관련정책개발 강화</p>\r\n");
      out.write("                <p>· 나눔관련R&amp;D 강화</p>\r\n");
      out.write("            </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            <!-- 2번 -->\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li class=\"image\">\r\n");
      out.write("                    <p class=\"number\">2</p>\r\n");
      out.write("                    <a href=\"#\" class=\"image2\"></a>\r\n");
      out.write("                    <strong>사회문제 해결 및<br>\r\n");
      out.write("                        사회성과 제시강화</strong>\r\n");
      out.write("                        <a href=\"#\" class=\"string\"></a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"text\">\r\n");
      out.write("                <b class=\"task\">전략과제</b>\r\n");
      out.write("                <p class=\"bold\">· 의제기반사회문제 해결&nbsp;강화<br></p>\r\n");
      out.write("                <p>· 새로운 사회변화 신속대응</p>\r\n");
      out.write("                <p>· 사업성과 보고 강화</p>\r\n");
      out.write("                <p>· 배분 영역의 확대</p>\r\n");
      out.write("                <p class=\"bold\">· 배분 행정의 혁신<br></p>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        <!-- 3번 -->\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li class=\"image\">\r\n");
      out.write("                <p class=\"number\">3</p>\r\n");
      out.write("                <a href=\"#\" class=\"image3\"></a>\r\n");
      out.write("                <strong>건강한 거버넌스<br>\r\n");
      out.write("                    구축</strong>\r\n");
      out.write("                    <a href=\"#\" class=\"string\"></a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"text\">\r\n");
      out.write("                <b class=\"task\">전략과제</b>\r\n");
      out.write("                <p>· 임원구성의다양성 제고</p>\r\n");
      out.write("                <p>· 의사결정 권한의 분산 및\r\n");
      out.write("                    독립성 강화</p>\r\n");
      out.write("                <p class=\"bold\">· 시민 참여 활성화<br></p>\r\n");
      out.write("                <p>· 의사결정 공개 확대</p>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        <!-- 4번 -->\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li class=\"image\">\r\n");
      out.write("                <p class=\"number\">4</p>\r\n");
      out.write("                <a href=\"#\" class=\"image4\"></a>\r\n");
      out.write("                <strong>변화 주도 조직<br>\r\n");
      out.write("                    운영</strong>\r\n");
      out.write("                    <a href=\"#\" class=\"string\"></a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"text\">\r\n");
      out.write("                <b class=\"task\">전략과제</b>\r\n");
      out.write("                <p>· 지정기탁 혁신</p>\r\n");
      out.write("                <p>· 디지털조직으로 변화</p>\r\n");
      out.write("                <p>· 지역중심사업체계 구축</p>\r\n");
      out.write("                <p>· 업무 효율성 증대</p>\r\n");
      out.write("                <p>· 조직 및 인적 역량 강화</p>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../fix/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
